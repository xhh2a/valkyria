on_actions = {
	on_startup = {
		effect = {

			#Core Setup event
			every_country = { country_event = dh_core.1 }

			# Setup up a player array
			every_country = {
				limit = {
					is_ai = no
				}
				add_to_array = { # It will automatically add the scope
					array = global.players
				}
			}

			if = {
				limit = {
					check_variable = {global.players^num > 1}
				}
				set_global_flag = is_mp
				else = {
					set_global_flag = is_not_mp
				}
			}

	#ROOT is subject FROM is previous overlord
	on_subject_free = {
		effect = {
			log = "[GetDateText] [Root.GetName]: on_subject_free FORMER OVERLORD: [From.GetName]"
			clr_country_flag = KR_can_raise_autonomy_level
			clr_country_flag = KR_can_lower_autonomy_level
			clr_country_flag = KR_can_be_annexed
			clr_country_flag = KR_can_become_free
		}
	}

	#ROOT is subject FROM is overlord
	on_subject_autonomy_level_change = {

		effect = {
			log = "[GetDateText] [Root.GetName]: on_subject_autonomy_level_change OVERLORD: [From.GetName]"
			clr_country_flag = KR_can_raise_autonomy_level
			clr_country_flag = KR_can_lower_autonomy_level
		}
	}

	#ROOT is subject FROM is overlord
	on_subject_annexed = {
		effect = {
			log = "[GetDateText] [Root.GetName]: on_subject_annexed OVERLORD: [From.GetName]"
			clr_country_flag = KR_can_raise_autonomy_level
			clr_country_flag = KR_can_lower_autonomy_level
			clr_country_flag = KR_can_be_annexed
			clr_country_flag = KR_can_become_free
		}
	}

	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired
	# on_annex = {
		
	# }

	#FROM is war target
	# on_declare_war = {
		
	# }

	#ROOT is winner #FROM is loser
	# on_peaceconference_ended = {
	# 	effect = {
	# 		log = "[GetDateText] [Root.GetName] (ROOT) on_peaceconference_ended [From.GetName] (FROM)"
	# 		ROOT = {
	# 			if = {
	# 				limit = { NOT = { has_country_flag = AI_move_unit_check } }
	# 				country_event = kr.political.200
	# 			}
	# 		}
	# 		FROM = {
	# 			if = {
	# 				limit = { NOT = { has_country_flag = AI_move_unit_check } }
	# 				country_event = kr.political.200
	# 			}
	# 		}
	# 	}
	# }

	# ROOT is capitulated country, FROM is winner
	# on_capitulation = {
		
	# }

	# ROOT is previously capitulated country
	on_uncapitulation = {
		effect = {
			log = "[GetDateText] [Root.GetName] has uncapitulated"
		}
	}

	on_leave_faction = {
		# effect = {
		# 	log = "[GetDateText] [Root.GetName] on_leave_faction FROM = [From.GetName]"
		# 	FROM = {
		# 		add_opinion_modifier = {
		# 			modifier = faction_traitor
		# 			target = ROOT
		# 			days = 365
		# 		}

		# 		add_opinion_modifier = {
		# 			modifier = faction_traitor_trade
		# 			target = ROOT
		# 			days = 365
		# 		}
		# 	}
		# 	ROOT = {
		# 		if = {
		# 			limit = { NOT = { has_country_flag = AI_move_unit_check } }
		# 			country_event = kr.political.200
		# 		}
		# 	}
		# 	FROM = {
		# 		if = {
		# 			limit = { NOT = { has_country_flag = AI_move_unit_check } }
		# 			country_event = kr.political.200
		# 		}
		# 	}
		# }
	}

	# FROM = country giving access, ROOT = country asking for access
	on_military_access = {
		effect = {
			log = "[GetDateText] [Root.GetName] has asked for military access to [From.GetName]"
		}
	}

	# FROM = country receiving access, ROOT = country offering access
	on_offer_military_access = {
		effect = {
			log = "[GetDateText] [Root.GetName] has offered military access to [From.GetName]"
		}
	}

	# FROM = country being called, ROOT = country calling
	on_call_allies = {
		effect = {
			log = "[GetDateText] [Root.GetName] has called its ally [From.GetName] into its war"
		}
	}

	# FROM = country being joined, ROOT = country joining
	on_join_allies = {
		effect = {
			log = "[GetDateText] [Root.GetName] is joining [From.GetName] in its war"
		}
	}

	# FROM = country receiving goods, ROOT = country sending goods
	on_lend_lease = {
		effect = {
			log = "[GetDateText] [Root.GetName] is offering a lend lease to [From.GetName]"
		}
	}

	# FROM = country requesting goods, ROOT = country sending goods
	on_incoming_lend_lease = {
		effect = {
			log = "[GetDateText] [From.GetName] has requested a lend lease from [From.GetName]"
		}
	}

	# FROM = country receiving volunteers, ROOT = country sending volunteers
	on_send_volunteers = {
		effect = {
			log = "[GetDateText] [Root.GetName] is sending volunteers to [From.GetName]"
		}
	}

	# FROM = country to which they're sent, ROOT = sending country
	on_send_expeditionary_force = {
		effect = {
			log = "[GetDateText] [Root.GetName] is sending an expeditionary force to [From.GetName]"
		}
	}

	# FROM = country from which the forces are returning, ROOT = country who sent them
	on_return_expeditionary_forces = {
		effect = {
			log = "[GetDateText] [Root.GetName] is recalling its expeditionary force from [From.GetName]"
		}
	}

	# FROM = country requesting them, ROOT = requesting country
	on_request_expeditionary_forces = {
		effect = {
			log = "[GetDateText] [From.GetName] has requested expeditionary forces from [Root.GetName]"
		}
	}

	# FROM = country on whom the wargoal is being generated, ROOT = country generating wargoal
	on_generate_wargoal = {
		effect = {
			log = "[GetDateText] [Root.GetName] is generating a wargoal on [From.GetName]"
		}
	}

	# FROM = country giving control of the state, ROOT = country asking for control of the state
	on_ask_for_state_control = {
		effect = {
			log = "[GetDateText] [Root.GetName] is asking for state control from [From.GetName]"
		}
	}

	# FROM = country accepting control of the state, ROOT = country giving control of the state
	on_give_state_control = {
		effect = {
			log = "[GetDateText] [Root.GetName] is giving state control to [From.GetName]"
		}
	}

	#FROM is state #ROOT is broken as hell
	on_nuke_drop = {

		effect = {
			news_event = { id = nuke_dropped.2 days = 1}
			news_event = { id = nuke_dropped.3 days = 1}
			news_event = { id = nuke_dropped.4 days = 1}
			news_event = { id = nuke_dropped.5 days = 1}
			news_event = { id = nuke_dropped.6 days = 1}
			news_event = { id = nuke_dropped.7 days = 1}
			news_event = { id = nuke_dropped.8 days = 1}
			news_event = { id = nuke_dropped.9 days = 1}
			news_event = { id = nuke_dropped.10 days = 1}
			news_event = { id = nuke_dropped.11 days = 1}
			news_event = { id = nuke_dropped.12 days = 1}
			news_event = { id = nuke_dropped.13 days = 1}
			news_event = { id = nuke_dropped.14 days = 1}
			news_event = { id = nuke_dropped.15 days = 1}
		}
		random_events = {
			100 = nuke_dropped.0
		}
	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			100 = ace_promoted.1
			5 = ace_promoted.2
		}
	}

	# country, FROM = ace, PREV = enemy ace
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			100 = aces_killed_each_other.1
		}
	}

	# country, FROM = our ace,
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			100 = ace_killed_by_ace.1
		}
	}

	# country, FROM = our ace,
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			100 = ace_killed_other_ace.1
		}
	}

	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			100 = ace_died.1
		}
	}

	#used when puppeting in a peace conference
	#ROOT = nation being puppeted, FROM = overlord
	on_puppet = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_puppet FROM = [From.GetName]"
		}
	}

	#used when puppeting through the occupied territories menu during peace time (or when releasing from non-core but owned territory, f.e. Britain releasing Egypt)
	#ROOT = nation being released, FROM = overlord
	on_release_as_puppet = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_release_as_puppet FROM = [From.GetName]"
		}
	}

	#ROOT is free nation FROM is releaser
	on_release_as_free = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_release_as_free FROM = [From.GetName]"
		}
	}

	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_offer_join_faction FROM = [From.GetName]"
		}
	}

	#FROM is faction leader on join faction requests. THIS DOES NOT FIRE ON ADD_TO_FACTION EFFECT! USE ON_OFFER_JOIN_FACTION!
	on_join_faction = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_join_faction FROM = [From.GetName]"
		}
	}

	# When a new faction is formed
	on_faction_formed = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_faction_formed"
		}
	}

	on_government_change = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_government_change"
		}
	}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_state_control_changed OLD CONTROLLER: [From.GetName] STATE: [From.From.GetName]"
		}
	}

	# on_new_term_election = {
	# 	effect = {
	# 	}
	# }

	on_army_leader_daily = {}

	# From is owner country
	on_army_leader_won_combat = {
		effect = {
			if = {
				limit = {
					NOT = { has_unit_leader_flag = recent_leader_event }
					check_variable = { random < 0.05 }
				}
				log = "[GetDateText] [Root.GetName] on_army_leader_won_combat [From.GetName]"
				set_unit_leader_flag = unit_leader_event
				unit_leader_event = { id = unit_leader.10 }
			}
		}
	}

	# From is owner country
	on_army_leader_lost_combat = {
		effect = {
			if = {
				limit = {
					NOT = { has_unit_leader_flag = recent_leader_event }
					check_variable = { random < 0.06 }
				}
				log = "[GetDateText] [Root.GetName] on_army_leader_lost_combat [From.GetName]"
				set_unit_leader_flag = unit_leader_event
				unit_leader_event = { id = unit_leader.10 }
			}
		}
	}

	on_army_leader_promoted = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_army_leader_promoted [From.GetName]"
			add_timed_unit_leader_trait = {
				trait = recently_promoted
				days = 100
			}
		}
	}

	# New Scopes
	# Scope is the country owner of the PotF, FROM is the country of the killer
	on_pride_of_the_fleet_sunk = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_pride_of_the_fleet_sunk [From.GetName]"
		}
	}

	#ROOT is winner #FROM gets annexed - This fires just before FROM gets annexed, meaning the country and everything it owns still exists. It will also fire on_annex and on_civil_war_end
	on_civil_war_end_before_annexation = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_civil_war_end_before_annexation [From.GetName]"
		}
	}
	on_civil_war_end = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_civil_war_end [From.GetName]"
		}
	}
	on_unit_leader_created = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_unit_leader_created"
		}
	}

	on_government_exiled = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_government_exiled"
		}
	}

	# Here for testing

	#Root is exile
	#From is new host
	#FromFrom is old host
	on_host_changed_from_capitulation = {
		effect = {
			#Transfer exile leaders to new host
			From.From = {
				every_army_leader = {
					limit = { is_exiled_leader_from = Root }
					set_nationality = Root.From
				}
			}
		}
	}

	#Root is exile
	#From is old host
	on_exile_government_reinstated = {
		effect = {
			From = {
				every_army_leader = {
					limit = { is_exiled_leader_from = Root }
					set_nationality = Root
				}
			}
			Root = {
				every_army_leader = {
					limit = { is_exiled_leader_from = Root }
					remove_unit_leader_trait = exiled_leader
					remove_exile_tag = yes
				}
			}
		}
	}
}
